// <auto-generated />
using System;
using LiminoAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LiminoAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190615113102_answer iscorrect property")]
    partial class answeriscorrectproperty
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:liminoDb.CodeNumbers", "'CodeNumbers', 'liminoDb', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LiminoAPI.Data.Models.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AudioUrl");

                    b.Property<long>("ExerciseId");

                    b.Property<string>("ImageUrl");

                    b.Property<bool>("IsCorrect");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Answers");

                    b.HasData(
                        new { Id = 1L, ExerciseId = 1L, ImageUrl = "Knop juist.png", IsCorrect = false },
                        new { Id = 2L, ExerciseId = 1L, ImageUrl = "Knop niet goed.png", IsCorrect = true },
                        new { Id = 3L, ExerciseId = 2L, ImageUrl = "Knop juist.png", IsCorrect = false },
                        new { Id = 4L, ExerciseId = 2L, ImageUrl = "Knop niet goed.png", IsCorrect = true },
                        new { Id = 5L, AudioUrl = "de_appel.mp3", ExerciseId = 3L, ImageUrl = "appel.jpg", IsCorrect = true },
                        new { Id = 6L, AudioUrl = "de_banaan.mp3", ExerciseId = 3L, ImageUrl = "banaan.jpg", IsCorrect = false },
                        new { Id = 7L, AudioUrl = "de_sinaasappel.mp3", ExerciseId = 3L, ImageUrl = "sinaasappel.jpg", IsCorrect = false },
                        new { Id = 8L, AudioUrl = "de_aardbei.mp3", ExerciseId = 3L, ImageUrl = "aardbei.jpg", IsCorrect = false },
                        new { Id = 9L, AudioUrl = "de_druiven.mp3", ExerciseId = 3L, ImageUrl = "druiven.jpg", IsCorrect = false },
                        new { Id = 10L, AudioUrl = "de_kiwi.mp3", ExerciseId = 3L, ImageUrl = "kiwi.jpg", IsCorrect = false },
                        new { Id = 11L, AudioUrl = "de_komkommer.mp3", ExerciseId = 3L, ImageUrl = "komkommer.jpg", IsCorrect = false },
                        new { Id = 12L, AudioUrl = "de_tomaat.mp3", ExerciseId = 3L, ImageUrl = "tomaat.jpg", IsCorrect = false },
                        new { Id = 13L, AudioUrl = "de_wortel.mp3", ExerciseId = 3L, ImageUrl = "wortel.jpg", IsCorrect = false },
                        new { Id = 14L, AudioUrl = "taart.mp3", ExerciseId = 4L, ImageUrl = "taart.jpg", IsCorrect = false },
                        new { Id = 15L, AudioUrl = "koekjes.mp3", ExerciseId = 4L, ImageUrl = "koekjes.jpg", IsCorrect = true },
                        new { Id = 16L, AudioUrl = "muffins.mp3", ExerciseId = 4L, ImageUrl = "muffin.jpg", IsCorrect = false },
                        new { Id = 17L, AudioUrl = "brood.mp3", ExerciseId = 4L, ImageUrl = "brood.jpg", IsCorrect = false },
                        new { Id = 18L, AudioUrl = "wieBenJijAudio1.wav", ExerciseId = 5L, ImageUrl = "eten-en-drinken.jpg", IsCorrect = false },
                        new { Id = 19L, AudioUrl = "wieBenJijAudio1.wav", ExerciseId = 5L, ImageUrl = "eten-en-drinken.jpg", IsCorrect = false },
                        new { Id = 20L, AudioUrl = "wieBenJijAudio1.wav", ExerciseId = 5L, ImageUrl = "eten-en-drinken.jpg", IsCorrect = false },
                        new { Id = 21L, AudioUrl = "wieBenJijAudio1.wav", ExerciseId = 5L, ImageUrl = "eten-en-drinken.jpg", IsCorrect = false },
                        new { Id = 22L, AudioUrl = "wieBenJijAudio1.wav", ExerciseId = 6L, ImageUrl = "eten-en-drinken.jpg", IsCorrect = false },
                        new { Id = 23L, AudioUrl = "wieBenJijAudio1.wav", ExerciseId = 6L, ImageUrl = "eten-en-drinken.jpg", IsCorrect = false },
                        new { Id = 24L, AudioUrl = "wieBenJijAudio1.wav", ExerciseId = 6L, ImageUrl = "eten-en-drinken.jpg", IsCorrect = false },
                        new { Id = 25L, AudioUrl = "wieBenJijAudio1.wav", ExerciseId = 7L, ImageUrl = "eten-en-drinken.jpg", IsCorrect = false },
                        new { Id = 26L, AudioUrl = "wieBenJijAudio1.wav", ExerciseId = 7L, ImageUrl = "eten-en-drinken.jpg", IsCorrect = true }
                    );
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Audio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId");

                    b.Property<string>("FragmentUrl");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Audios");

                    b.HasData(
                        new { Id = 1L, CategoryId = 1L, FragmentUrl = "wieBenJijAudio1.wav", ImageUrl = "wieBenJijAudio1.jpg", Name = "wieBenJijAudio1" },
                        new { Id = 2L, CategoryId = 1L, FragmentUrl = "wieBenJijAudio2.wav", ImageUrl = "wieBenJijAudio2.jpg", Name = "wieBenJijAudio2" },
                        new { Id = 3L, CategoryId = 1L, FragmentUrl = "wieBenJijAudio2.wav", ImageUrl = "wieBenJijAudio3.jpg", Name = "wieBenJijAudio3" },
                        new { Id = 4L, CategoryId = 2L, FragmentUrl = "één.mp3", ImageUrl = "één.jpg", Name = "één" },
                        new { Id = 5L, CategoryId = 2L, FragmentUrl = "twee.mp3", ImageUrl = "twee.jpg", Name = "twee" },
                        new { Id = 6L, CategoryId = 2L, FragmentUrl = "drie.mp3", ImageUrl = "drie.jpg", Name = "drie" },
                        new { Id = 7L, CategoryId = 3L, FragmentUrl = "zonneschijn.mp3", ImageUrl = "zonneschijn.jpg", Name = "zonneschijn" },
                        new { Id = 8L, CategoryId = 3L, FragmentUrl = "regen.mp3", ImageUrl = "regen.jpg", Name = "regen" },
                        new { Id = 9L, CategoryId = 3L, FragmentUrl = "bewolkt.mp3", ImageUrl = "bewolkt.jpg", Name = "bewolkt" },
                        new { Id = 10L, CategoryId = 4L, FragmentUrl = "twaalfUur.mp3", ImageUrl = "twaalfUur.jpg", Name = "twaalfUur" },
                        new { Id = 11L, CategoryId = 4L, FragmentUrl = "kwartVoorTwee.mp3", ImageUrl = "kwartVoorTwee.jpg", Name = "kwartVoorTwee" },
                        new { Id = 12L, CategoryId = 4L, FragmentUrl = "zesUur.mp3", ImageUrl = "zesUur.jpg", Name = "zesUur" },
                        new { Id = 13L, CategoryId = 5L, FragmentUrl = "schoolAudio1.mp3", ImageUrl = "schoolAudio1.jpg", Name = "schoolAudio1" },
                        new { Id = 14L, CategoryId = 5L, FragmentUrl = "schoolAudio2.mp3", ImageUrl = "schoolAudio2.jpg", Name = "schoolAudio2" },
                        new { Id = 15L, CategoryId = 5L, FragmentUrl = "schoolAudio3.mp3", ImageUrl = "schoolAudio3.jpg", Name = "schoolAudio3" },
                        new { Id = 16L, CategoryId = 6L, FragmentUrl = "amsterdam.mp3", ImageUrl = "amsterdam.jpg", Name = "amsterdam" },
                        new { Id = 17L, CategoryId = 6L, FragmentUrl = "parijs.mp3", ImageUrl = "parijs.jpg", Name = "parijs" },
                        new { Id = 18L, CategoryId = 6L, FragmentUrl = "brussel.mp3", ImageUrl = "brussel.jpg", Name = "brussel" },
                        new { Id = 19L, CategoryId = 7L, FragmentUrl = "afspraakAudio1.mp3", ImageUrl = "afspraakAudio1.jpg", Name = "afspraakAudio1" },
                        new { Id = 20L, CategoryId = 7L, FragmentUrl = "afspraakAudio2.mp3", ImageUrl = "afspraakAudio2.jpg", Name = "afspraakAudio2" },
                        new { Id = 21L, CategoryId = 7L, FragmentUrl = "afspraakAudio.mp3", ImageUrl = "afspraakAudio3.jpg", Name = "afspraakAudio3" },
                        new { Id = 22L, CategoryId = 8L, FragmentUrl = "vraagAudio1.mp3", ImageUrl = "vraagAudio1.jpg", Name = "vraagAudio1" },
                        new { Id = 23L, CategoryId = 8L, FragmentUrl = "vraagAudio2.mp3", ImageUrl = "vraagAudio2.jpg", Name = "vraagAudio2" },
                        new { Id = 24L, CategoryId = 8L, FragmentUrl = "vraagAudio3.mp3", ImageUrl = "vraagAudio3.jpg", Name = "vraagAudio3" },
                        new { Id = 25L, CategoryId = 9L, FragmentUrl = "de_sinaasappel.mp3", ImageUrl = "sinaasappel.jpg", Name = "appelsien" },
                        new { Id = 26L, CategoryId = 9L, FragmentUrl = "de_banaan.mp3", ImageUrl = "banaan.jpg", Name = "banaan" },
                        new { Id = 27L, CategoryId = 9L, FragmentUrl = "de_appel.mp3", ImageUrl = "appel.jpg", Name = "appel" },
                        new { Id = 28L, CategoryId = 10L, FragmentUrl = "broek.mp3", ImageUrl = "broek.jpg", Name = "broek" },
                        new { Id = 29L, CategoryId = 10L, FragmentUrl = "trui.mp3", ImageUrl = "trui.jpg", Name = "trui" },
                        new { Id = 30L, CategoryId = 10L, FragmentUrl = "schoenen.mp3", ImageUrl = "schoenen.jpg", Name = "schoenen" },
                        new { Id = 31L, CategoryId = 11L, FragmentUrl = "winkelAudio1.mp3", ImageUrl = "winkelAudio1.jpg", Name = "winkelAudio1" },
                        new { Id = 32L, CategoryId = 11L, FragmentUrl = "winkelAudio2.mp3", ImageUrl = "winkelAudio2.jpg", Name = "winkelAudio2" },
                        new { Id = 33L, CategoryId = 11L, FragmentUrl = "winkelAudio3.mp3", ImageUrl = "winkelAudio3.jpg", Name = "winkelAudio3" },
                        new { Id = 34L, CategoryId = 12L, FragmentUrl = "stoel.mp3", ImageUrl = "stoel.jpg", Name = "stoel" },
                        new { Id = 35L, CategoryId = 12L, FragmentUrl = "tafel.mp3", ImageUrl = "tafel.jpg", Name = "tafel" },
                        new { Id = 36L, CategoryId = 12L, FragmentUrl = "kast.mp3", ImageUrl = "kast.jpg", Name = "kast" },
                        new { Id = 37L, CategoryId = 13L, FragmentUrl = "bloedneus.mp3", ImageUrl = "bloedneus.jpg", Name = "bloedneus" },
                        new { Id = 38L, CategoryId = 13L, FragmentUrl = "naald.mp3", ImageUrl = "naald.jpg", Name = "naald" },
                        new { Id = 39L, CategoryId = 13L, FragmentUrl = "medicijn.mp3", ImageUrl = "medicijn.jpg", Name = "medicijn" },
                        new { Id = 40L, CategoryId = 14L, FragmentUrl = "verkeerslicht.mp3", ImageUrl = "verkeerslicht.jpg", Name = "verkeerslicht" },
                        new { Id = 41L, CategoryId = 14L, FragmentUrl = "auto.mp3", ImageUrl = "auto.jpg", Name = "auto" },
                        new { Id = 42L, CategoryId = 14L, FragmentUrl = "fiets.mp3", ImageUrl = "fiets.jpg", Name = "fiets" },
                        new { Id = 43L, CategoryId = 15L, FragmentUrl = "bouwvakker.mp3", ImageUrl = "bouwvakker.jpg", Name = "bouwvakker" },
                        new { Id = 44L, CategoryId = 15L, FragmentUrl = "leerkracht.mp3", ImageUrl = "leerkracht.jpg", Name = "leerkracht" },
                        new { Id = 45L, CategoryId = 15L, FragmentUrl = "dokter.mp3", ImageUrl = "dokter.jpg", Name = "dokter" },
                        new { Id = 46L, CategoryId = 16L, FragmentUrl = "fietsen.mp3", ImageUrl = "fietsen.jpg", Name = "fietsen" },
                        new { Id = 47L, CategoryId = 16L, FragmentUrl = "voetballen.mp3", ImageUrl = "voetballen.jpg", Name = "voetballen" },
                        new { Id = 48L, CategoryId = 16L, FragmentUrl = "zwemmen.mp3", ImageUrl = "zwemmen.jpg", Name = "zwemmen" },
                        new { Id = 49L, CategoryId = 17L, FragmentUrl = "baby.mp3", ImageUrl = "baby.jpg", Name = "baby" },
                        new { Id = 50L, CategoryId = 17L, FragmentUrl = "kleuter.mp3", ImageUrl = "kleuter.jpg", Name = "kleuter" },
                        new { Id = 51L, CategoryId = 17L, FragmentUrl = "tiener.mp3", ImageUrl = "tiener.jpg", Name = "tiener" },
                        new { Id = 52L, CategoryId = 18L, FragmentUrl = "blij.mp3", ImageUrl = "blij.jpg", Name = "blij" },
                        new { Id = 53L, CategoryId = 18L, FragmentUrl = "verdrietig.mp3", ImageUrl = "verdrietig.jpg", Name = "verdrietig" },
                        new { Id = 54L, CategoryId = 18L, FragmentUrl = "bang.mp3", ImageUrl = "bang.jpg", Name = "bang" },
                        new { Id = 55L, CategoryId = 19L, FragmentUrl = "nieuwLievenAudio1.mp3", ImageUrl = "nieuwLevenAudio1.jpg", Name = "nieuwLevenAudio1" },
                        new { Id = 56L, CategoryId = 19L, FragmentUrl = "nieuwLievenAudio2.mp3", ImageUrl = "nieuwLevenAudio2.jpg", Name = "nieuwLevenAudio2" },
                        new { Id = 57L, CategoryId = 19L, FragmentUrl = "nieuwLievenAudio3.mp3", ImageUrl = "nieuwLevenAudio3.jpg", Name = "nieuwLevenAudio3" },
                        new { Id = 58L, CategoryId = 20L, FragmentUrl = "identiteitskaart.mp3", ImageUrl = "identiteitskaart.jpg", Name = "identiteitskaart" },
                        new { Id = 59L, CategoryId = 20L, FragmentUrl = "rijbewijs.mp3", ImageUrl = "rijbewijs.jpg", Name = "rijbewijs" },
                        new { Id = 60L, CategoryId = 20L, FragmentUrl = "bankkaart.mp3", ImageUrl = "bankkaart.jpg", Name = "bankkaart" }
                    );
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = 1L, ImageUrl = "wie-ben-jij.jpg", Name = "Wie ben jij?" },
                        new { Id = 2L, ImageUrl = "cijfers.jpg", Name = "Cijfers" },
                        new { Id = 3L, ImageUrl = "het-weer.png", Name = "Het weer" },
                        new { Id = 4L, ImageUrl = "tijd.jpg", Name = "Tijd" },
                        new { Id = 5L, ImageUrl = "school.jpg", Name = "School" },
                        new { Id = 6L, ImageUrl = "plaatsen.jpg", Name = "Plaatsen / Ga je mee" },
                        new { Id = 7L, ImageUrl = "afspraak.jpg", Name = "Afspraak" },
                        new { Id = 8L, ImageUrl = "vragen.jpg", Name = "Vragen" },
                        new { Id = 9L, ImageUrl = "eten-en-drinken.jpg", Name = "Eten en drinken" },
                        new { Id = 10L, ImageUrl = "kleding.jpg", Name = "Kleding" },
                        new { Id = 11L, ImageUrl = "winkel.jpg", Name = "Winkel" },
                        new { Id = 12L, ImageUrl = "wonen.jpg", Name = "Wonen" },
                        new { Id = 13L, ImageUrl = "gezondheid.jpg", Name = "Gezondheid" },
                        new { Id = 14L, ImageUrl = "verkeer.jpg", Name = "Verkeer" },
                        new { Id = 15L, ImageUrl = "werk.jpg", Name = "Werk" },
                        new { Id = 16L, ImageUrl = "vrije-tijd.png", Name = "Vrije tijd" },
                        new { Id = 17L, ImageUrl = "kinderen.jpg", Name = "Kinderen" },
                        new { Id = 18L, ImageUrl = "mening-gevoel.jpg", Name = "Mening / gevoel" },
                        new { Id = 19L, ImageUrl = "nieuw-leven.jpg", Name = "Nieuw leven" },
                        new { Id = 20L, ImageUrl = "documenten.jpg", Name = "Documenten" },
                        new { Id = 21L, ImageUrl = "limino-filmpjes.jpg", Name = "LiMiNo-filmpjes" }
                    );
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Exercise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId");

                    b.Property<string>("ImageUrl");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<string>("QuestionUrl");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.Property<string>("VideoUrl");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new { Id = 1L, CategoryId = 1L, Level = 0, QuestionUrl = "hoe_laat_komt_de_bus.mp3", Title = "Oefening 1", Type = "true or false" },
                        new { Id = 2L, CategoryId = 1L, Level = 1, QuestionUrl = "kijk_naar_de_video_juist_of_out.wav", Title = "Oefening 2", Type = "true or false", VideoUrl = "https://www.youtube.com/embed/h1zaAu_7VR0" },
                        new { Id = 3L, CategoryId = 1L, Level = 2, QuestionUrl = "ikZoekEenAppelVraag.mp3", Title = "Oefening 3", Type = "collage", VideoUrl = "https://www.youtube.com/embed/7btgD5cJxnY" },
                        new { Id = 4L, CategoryId = 1L, Level = 2, QuestionUrl = "multiple_choice_question.mp3", Title = "Oefening 4", Type = "multiple choice", VideoUrl = "https://www.youtube.com/embed/7btgD5cJxnY" },
                        new { Id = 5L, CategoryId = 1L, Level = 2, QuestionUrl = "multiple_choice_question.mp3", Title = "Oefening 5", Type = "multiple choice" },
                        new { Id = 6L, CategoryId = 1L, Level = 1, QuestionUrl = "wieBenJijAudio1.wav", Title = "Oefening 6", Type = "multiple choice" },
                        new { Id = 7L, CategoryId = 1L, Level = 0, QuestionUrl = "wieBenJijAudio1.wav", Title = "Oefening 7", Type = "multiple choice" }
                    );
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.ExerciseSeries", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Code")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR liminoDb.CodeNumbers");

                    b.Property<string>("Level");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ExerciseSeries");
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.ExerciseSeriesExercises", b =>
                {
                    b.Property<long>("ExerciseId");

                    b.Property<long>("ExerciseSeriesId");

                    b.HasKey("ExerciseId", "ExerciseSeriesId");

                    b.HasIndex("ExerciseSeriesId");

                    b.ToTable("ExerciseSeriesExercises");
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Role");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1L, PasswordHash = new byte[] { 123, 133, 218, 252, 25, 103, 85, 105, 11, 237, 43, 164, 5, 159, 134, 10, 105, 186, 96, 67, 94, 51, 239, 10, 103, 51, 56, 13, 141, 90, 220, 86, 134, 211, 196, 37, 169, 83, 3, 182, 65, 206, 186, 69, 78, 40, 252, 42, 121, 165, 231, 251, 98, 236, 104, 243, 163, 121, 180, 220, 188, 101, 229, 116 }, PasswordSalt = new byte[] { 145, 124, 36, 189, 93, 32, 248, 179, 75, 31, 12, 220, 234, 227, 31, 105, 173, 116, 114, 108, 204, 225, 201, 88, 132, 254, 243, 157, 102, 95, 15, 46, 10, 152, 239, 107, 4, 40, 30, 240, 168, 170, 184, 50, 165, 76, 210, 14, 229, 11, 13, 31, 79, 43, 200, 8, 40, 171, 14, 94, 234, 83, 66, 115, 130, 36, 34, 119, 22, 148, 171, 214, 70, 44, 108, 182, 53, 189, 37, 76, 114, 91, 101, 211, 11, 210, 161, 66, 215, 177, 116, 248, 199, 53, 75, 144, 167, 255, 40, 35, 86, 13, 145, 246, 86, 174, 122, 193, 47, 96, 79, 67, 145, 174, 174, 244, 66, 101, 167, 26, 153, 35, 207, 241, 223, 151, 33, 46 }, Role = "Admin", Username = "admin@limino.be" },
                        new { Id = 2L, PasswordHash = new byte[] { 123, 133, 218, 252, 25, 103, 85, 105, 11, 237, 43, 164, 5, 159, 134, 10, 105, 186, 96, 67, 94, 51, 239, 10, 103, 51, 56, 13, 141, 90, 220, 86, 134, 211, 196, 37, 169, 83, 3, 182, 65, 206, 186, 69, 78, 40, 252, 42, 121, 165, 231, 251, 98, 236, 104, 243, 163, 121, 180, 220, 188, 101, 229, 116 }, PasswordSalt = new byte[] { 145, 124, 36, 189, 93, 32, 248, 179, 75, 31, 12, 220, 234, 227, 31, 105, 173, 116, 114, 108, 204, 225, 201, 88, 132, 254, 243, 157, 102, 95, 15, 46, 10, 152, 239, 107, 4, 40, 30, 240, 168, 170, 184, 50, 165, 76, 210, 14, 229, 11, 13, 31, 79, 43, 200, 8, 40, 171, 14, 94, 234, 83, 66, 115, 130, 36, 34, 119, 22, 148, 171, 214, 70, 44, 108, 182, 53, 189, 37, 76, 114, 91, 101, 211, 11, 210, 161, 66, 215, 177, 116, 248, 199, 53, 75, 144, 167, 255, 40, 35, 86, 13, 145, 246, 86, 174, 122, 193, 47, 96, 79, 67, 145, 174, 174, 244, 66, 101, 167, 26, 153, 35, 207, 241, 223, 151, 33, 46 }, Role = "User", Username = "teacher@limino.be" }
                    );
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Video", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId");

                    b.Property<string>("Name");

                    b.Property<string>("VideoUrl");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Videos");

                    b.HasData(
                        new { Id = 11L, CategoryId = 1L, Name = "Wie ben jij?", VideoUrl = "https://www.youtube.com/embed/kvH9wlNrUTY" },
                        new { Id = 12L, CategoryId = 1L, Name = "Cijfers", VideoUrl = "https://www.youtube.com/embed/sHak0nIUsIQ" },
                        new { Id = 13L, CategoryId = 1L, Name = "Het weer", VideoUrl = "https://www.youtube.com/embed/1o_-LS34ntQ" },
                        new { Id = 14L, CategoryId = 1L, Name = "Tijd", VideoUrl = "https://www.youtube.com/embed/kvH9wlNrUTY" },
                        new { Id = 15L, CategoryId = 1L, Name = "School", VideoUrl = "https://www.youtube.com/embed/ZiOxgo5HbQM" },
                        new { Id = 16L, CategoryId = 1L, Name = "Plaatsen / Ga je mee", VideoUrl = "https://www.youtube.com/embed/w_nNIU88aVI" },
                        new { Id = 17L, CategoryId = 1L, Name = "Afspraak", VideoUrl = "https://www.youtube.com/embed/YXld4SDT2X4" },
                        new { Id = 18L, CategoryId = 1L, Name = "Vragen", VideoUrl = "https://www.youtube.com/embed/h1zaAu_7VR0" },
                        new { Id = 19L, CategoryId = 1L, Name = "Eten en drinken", VideoUrl = "https://www.youtube.com/embed/7btgD5cJxnY" }
                    );
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Answer", b =>
                {
                    b.HasOne("LiminoAPI.Data.Models.Exercise", "Exercise")
                        .WithMany("Answers")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Audio", b =>
                {
                    b.HasOne("LiminoAPI.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Exercise", b =>
                {
                    b.HasOne("LiminoAPI.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.ExerciseSeriesExercises", b =>
                {
                    b.HasOne("LiminoAPI.Data.Models.Exercise", "Exercise")
                        .WithMany("ExerciseSeriesExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LiminoAPI.Data.Models.ExerciseSeries", "ExerciseSeries")
                        .WithMany("ExerciseSeriesExercises")
                        .HasForeignKey("ExerciseSeriesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Video", b =>
                {
                    b.HasOne("LiminoAPI.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
