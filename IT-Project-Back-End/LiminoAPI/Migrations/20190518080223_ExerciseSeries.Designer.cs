// <auto-generated />
using System;
using LiminoAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LiminoAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190518080223_ExerciseSeries")]
    partial class ExerciseSeries
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LiminoAPI.Data.Models.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AudioUrl");

                    b.Property<bool>("Correct");

                    b.Property<long>("ExerciseId");

                    b.Property<string>("ImageUrl");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AudioUrl = "AudioUrl1",
                            Correct = false,
                            ExerciseId = 1L,
                            ImageUrl = "ImgUrl1"
                        },
                        new
                        {
                            Id = 2L,
                            AudioUrl = "AudioUrl2",
                            Correct = false,
                            ExerciseId = 1L,
                            ImageUrl = "ImgUrl2"
                        },
                        new
                        {
                            Id = 3L,
                            AudioUrl = "AudioUrl3",
                            Correct = true,
                            ExerciseId = 1L,
                            ImageUrl = "ImgUrl3"
                        },
                        new
                        {
                            Id = 4L,
                            AudioUrl = "AudioUrl1",
                            Correct = false,
                            ExerciseId = 2L,
                            ImageUrl = "ImgUrl1"
                        },
                        new
                        {
                            Id = 5L,
                            AudioUrl = "AudioUrl2",
                            Correct = false,
                            ExerciseId = 2L,
                            ImageUrl = "ImgUrl2"
                        },
                        new
                        {
                            Id = 6L,
                            AudioUrl = "AudioUrl3",
                            Correct = true,
                            ExerciseId = 2L,
                            ImageUrl = "ImgUrl3"
                        },
                        new
                        {
                            Id = 7L,
                            AudioUrl = "AudioUrl1",
                            Correct = false,
                            ExerciseId = 3L,
                            ImageUrl = "ImgUrl1"
                        },
                        new
                        {
                            Id = 8L,
                            AudioUrl = "AudioUrl2",
                            Correct = false,
                            ExerciseId = 3L,
                            ImageUrl = "ImgUrl2"
                        },
                        new
                        {
                            Id = 9L,
                            AudioUrl = "AudioUrl3",
                            Correct = true,
                            ExerciseId = 3L,
                            ImageUrl = "ImgUrl3"
                        });
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Audio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId");

                    b.Property<string>("FragmentUrl");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Audios");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            FragmentUrl = "audioUrl1",
                            ImageUrl = "imageUrl4",
                            Name = "Dit is een banaan"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 1L,
                            FragmentUrl = "audioUrl3",
                            ImageUrl = "imageUrl7",
                            Name = "Dit is een appel"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 2L,
                            FragmentUrl = "audioUrl2",
                            ImageUrl = "imageUrl5",
                            Name = "welke bus moet ik nemen?"
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 2L,
                            FragmentUrl = "audioUrl2",
                            ImageUrl = "imageUrl8",
                            Name = "hoe neem ik een taxi?"
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 3L,
                            FragmentUrl = "audioUrl3",
                            ImageUrl = "imageUrl5",
                            Name = "Mag ik een glas water?"
                        });
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryType");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryType = "Video",
                            ImageUrl = "imageUrl1",
                            Name = "food"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryType = "Audio",
                            ImageUrl = "imageUrl2",
                            Name = "traffic"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryType = "Audio",
                            ImageUrl = "imageUrl3",
                            Name = "drinks"
                        });
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Exercise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId");

                    b.Property<string>("Name");

                    b.Property<string>("QuestionUrl");

                    b.Property<string>("Type");

                    b.Property<string>("VideoUrl");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            Name = "First Question",
                            QuestionUrl = "questionUrl",
                            Type = "Collage",
                            VideoUrl = "videoUrl"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 2L,
                            Name = "Second Question",
                            QuestionUrl = "questionUrl2",
                            Type = "True Or False",
                            VideoUrl = "videoUrl2"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 3L,
                            Name = "Second Question",
                            QuestionUrl = "questionUrl3",
                            Type = "Multiple Choice",
                            VideoUrl = "videoUrl3"
                        });
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.ExerciseSeries", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ExerciseSeries");
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Role");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Video", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId");

                    b.Property<string>("Name");

                    b.Property<string>("VideoUrl");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Videos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            Name = "Video van een banaan",
                            VideoUrl = "VideoUrl1"
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 1L,
                            Name = "Video van een appel",
                            VideoUrl = "VideoUrl2"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 2L,
                            Name = "Video van een bus",
                            VideoUrl = "VideoUrl2"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 3L,
                            Name = "Video van een glas water",
                            VideoUrl = "VideoUrl3"
                        });
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Answer", b =>
                {
                    b.HasOne("LiminoAPI.Data.Models.Exercise", "Exercise")
                        .WithMany("Answers")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Audio", b =>
                {
                    b.HasOne("LiminoAPI.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Exercise", b =>
                {
                    b.HasOne("LiminoAPI.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Video", b =>
                {
                    b.HasOne("LiminoAPI.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
