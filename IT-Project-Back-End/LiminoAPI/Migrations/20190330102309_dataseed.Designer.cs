// <auto-generated />
using LiminoAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LiminoAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190330102309_dataseed")]
    partial class dataseed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LiminoAPI.Data.Models.Audio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId");

                    b.Property<string>("FragmentUrl");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Audios");

                    b.HasData(
                        new { Id = 1L, CategoryId = 1L, FragmentUrl = "audioUrl1", ImageUrl = "imageUrl4", Name = "Dit is een banaan" },
                        new { Id = 2L, CategoryId = 1L, FragmentUrl = "audioUrl3", ImageUrl = "imageUrl7", Name = "Dit is een appel" },
                        new { Id = 3L, CategoryId = 2L, FragmentUrl = "audioUrl2", ImageUrl = "imageUrl5", Name = "welke bus moet ik nemen?" },
                        new { Id = 4L, CategoryId = 2L, FragmentUrl = "audioUrl2", ImageUrl = "imageUrl8", Name = "hoe neem ik een taxi?" },
                        new { Id = 5L, CategoryId = 3L, FragmentUrl = "audioUrl3", ImageUrl = "imageUrl5", Name = "Mag ik een glas water?" }
                    );
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryType");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = 1L, CategoryType = "Video", ImageUrl = "imageUrl1", Name = "eten" },
                        new { Id = 2L, CategoryType = "Audio", ImageUrl = "imageUrl2", Name = "verkeer" },
                        new { Id = 3L, CategoryType = "Audio", ImageUrl = "imageUrl3", Name = "drinken" }
                    );
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Video", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId");

                    b.Property<string>("Name");

                    b.Property<string>("VideoUrl");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Videos");

                    b.HasData(
                        new { Id = 1L, CategoryId = 1L, Name = "Video van een banaan", VideoUrl = "VideoUrl1" },
                        new { Id = 4L, CategoryId = 1L, Name = "Video van een appel", VideoUrl = "VideoUrl2" },
                        new { Id = 2L, CategoryId = 2L, Name = "Video van een bus", VideoUrl = "VideoUrl2" },
                        new { Id = 3L, CategoryId = 3L, Name = "Video van een glas water", VideoUrl = "VideoUrl3" }
                    );
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Audio", b =>
                {
                    b.HasOne("LiminoAPI.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LiminoAPI.Data.Models.Video", b =>
                {
                    b.HasOne("LiminoAPI.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
